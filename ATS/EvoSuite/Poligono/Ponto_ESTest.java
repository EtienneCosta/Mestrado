/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 13 20:40:32 GMT 2020
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Ponto_ESTest extends Ponto_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      Ponto ponto1 = new Ponto(ponto0);
      ponto1.setY(3645.353);
      boolean boolean0 = ponto1.equals(ponto0);
      assertEquals(3645.353, ponto1.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      Ponto ponto1 = new Ponto(ponto0);
      ponto0.decCoord((-930.5097453585411), 3162.458896234159);
      boolean boolean0 = ponto0.equals(ponto1);
      assertFalse(ponto0.simetrico());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Ponto ponto0 = new Ponto(2000.92457779427, 0.0);
      boolean boolean0 = ponto0.coordPos();
      assertEquals(2000.92457779427, ponto0.getX(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, ponto0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ponto ponto0 = new Ponto(2.0, (-1899.394581053528));
      ponto0.incCoord((-1899.394581053528), 2.0);
      boolean boolean0 = ponto0.coordPos();
      assertEquals((-1897.394581053528), ponto0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Ponto ponto0 = new Ponto((-1225.1170875076814), 2.0);
      boolean boolean0 = ponto0.simetrico();
      assertFalse(boolean0);
      assertEquals(2.0, ponto0.getY(), 0.01);
      assertEquals((-1225.1170875076814), ponto0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      ponto0.decCoord((-1.0), (-1.0));
      ponto0.somaPonto((-2220.68112), (-1.0));
      assertFalse(ponto0.simetrico());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      ponto0.somaPonto((-716.4699975153), (-716.4699975153));
      assertEquals((-716.4699975153), ponto0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      double double0 = ponto0.getY();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, ponto0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Ponto ponto0 = new Ponto((-1225.1170875076814), 2.0);
      double double0 = ponto0.getY();
      assertEquals(2.0, double0, 0.01);
      assertFalse(ponto0.coordPos());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      double double0 = ponto0.getX();
      assertEquals(0.0, ponto0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      ponto0.incCoord((-369.5312592167), (-369.5312592167));
      double double0 = ponto0.getX();
      assertEquals((-369.5312592167), ponto0.getY(), 0.01);
      assertEquals((-369.5312592167), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      Ponto ponto1 = ponto0.somaPonto(0.0, (-1.0));
      Ponto ponto2 = ponto0.clone();
      ponto0.somaPonto(ponto1);
      double double0 = ponto0.distancia(ponto2);
      assertEquals((-2.0), ponto0.getY(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      ponto0.clone();
      assertEquals(0.0, ponto0.getX(), 0.01);
      assertEquals(0.0, ponto0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Ponto ponto0 = new Ponto((-2910.9401215889), 1676.904855);
      Ponto ponto1 = ponto0.clone();
      assertFalse(ponto1.coordPos());
      assertEquals(1676.904855, ponto1.getY(), 0.01);
      assertEquals(1676.904855, ponto0.getY(), 0.01);
      assertEquals((-2910.9401215889), ponto1.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Ponto ponto0 = new Ponto(2.0, (-1899.394581053528));
      Ponto ponto1 = ponto0.clone();
      assertEquals((-1899.394581053528), ponto1.getY(), 0.01);
      assertEquals(2.0, ponto1.getX(), 0.01);
      assertFalse(ponto1.coordPos());
      assertEquals(2.0, ponto0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      // Undeclared exception!
      try { 
        ponto0.somaPonto((Ponto) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Ponto", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      // Undeclared exception!
      try { 
        ponto0.distancia((Ponto) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Ponto", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Ponto ponto0 = null;
      try {
        ponto0 = new Ponto((Ponto) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Ponto", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Ponto ponto0 = new Ponto(2.0, (-1899.394581053528));
      double double0 = ponto0.getY();
      assertEquals((-1899.394581053528), double0, 0.01);
      assertEquals(2.0, ponto0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Ponto ponto0 = new Ponto(858.36448526189, 0.0);
      double double0 = ponto0.getX();
      assertEquals(0.0, ponto0.getY(), 0.01);
      assertEquals(858.36448526189, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      Ponto ponto1 = new Ponto();
      ponto1.setY(1.0);
      boolean boolean0 = ponto0.equals(ponto1);
      assertEquals(1.0, ponto1.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Ponto ponto0 = new Ponto(858.36448526189, 0.0);
      Ponto ponto1 = new Ponto(ponto0);
      ponto0.somaPonto(ponto1);
      boolean boolean0 = ponto1.equals(ponto0);
      assertEquals(1716.72897052378, ponto0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      boolean boolean0 = ponto0.equals("x : 0.0 y: 0.0");
      assertEquals(0.0, ponto0.getX(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, ponto0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Ponto ponto0 = new Ponto(2458.60887535, 2458.60887535);
      Ponto ponto1 = new Ponto(ponto0);
      boolean boolean0 = ponto0.equals(ponto1);
      assertTrue(ponto1.coordPos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Ponto ponto0 = new Ponto(2458.60887535, 2458.60887535);
      boolean boolean0 = ponto0.equals(ponto0);
      assertTrue(boolean0);
      assertTrue(ponto0.coordPos());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      boolean boolean0 = ponto0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0.0, ponto0.getY(), 0.01);
      assertEquals(0.0, ponto0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Ponto ponto0 = new Ponto(2458.60887535, 2458.60887535);
      ponto0.setY((-75.32882512733158));
      boolean boolean0 = ponto0.coordPos();
      assertEquals((-75.32882512733158), ponto0.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Ponto ponto0 = new Ponto(2458.60887535, 2458.60887535);
      boolean boolean0 = ponto0.coordPos();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      boolean boolean0 = ponto0.coordPos();
      assertEquals(0.0, ponto0.getY(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, ponto0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      boolean boolean0 = ponto0.simetrico();
      assertTrue(boolean0);
      assertEquals(0.0, ponto0.getY(), 0.01);
      assertEquals(0.0, ponto0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Ponto ponto0 = new Ponto(2458.60887535, 2458.60887535);
      ponto0.somaPonto((-75.32882512733158), (-75.32882512733158));
      assertEquals(2383.2800502226683, ponto0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Ponto ponto0 = new Ponto(858.36448526189, 0.0);
      double double0 = ponto0.distancia(ponto0);
      assertEquals(0.0, ponto0.getY(), 0.01);
      assertEquals(858.36448526189, ponto0.getX(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Ponto ponto0 = new Ponto(2458.60887535, 2458.60887535);
      ponto0.setX((-75.32882512733158));
      boolean boolean0 = ponto0.simetrico();
      assertEquals((-75.32882512733158), ponto0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      String string0 = ponto0.toString();
      assertEquals("x : 0.0 y: 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Ponto ponto0 = new Ponto(2458.60887535, 2458.60887535);
      Ponto ponto1 = ponto0.clone();
      assertTrue(ponto1.coordPos());
  }
}
